 HashSet<object> set=new HashSet()
 
             boolean	add(Object o)
             void	clear()                      // clear the entire hashset
             boolean	contains(Object o)
             boolean	isEmpty()
             boolean	remove(Object o)
             int	size()
             boolean equals()                  // compare two hashsets
 
 
 HashMap<Object1, object2> map = new HashMap<>();
 
             object value put(Object key, Object value)
             object value get(Object key)
             void clear()
             boolean containsValue(Object value)	
             boolean containsKey(Object key)	
             boolean isEmpty()	
             object value remove(Object key)	
             object value replace(object key, object value)	
             int size()	
             
TreeSet<Integer> set = new TreeSet<>();
          
           add(Integer)
           clear()
           contains(Integer)
           isEmpty()
           remove(Integer)
           size()
           
           ceiling(Integer)  //the least element in this set greater than or equal to the given element 
           floor(Integer)  //greatest element in this set less than or equal to the given element, or null
           
           first()      //the first element in TreeSet if TreeSet is not null
           last()        // last element in TreeSet if TreeSet is not null

           higher(Integer)  //the least element in this set strictly greater than the given element, or null 
           lower(Integer)   //the greatest element in this set strictly less than the given element, or null
